

#include <CapacitiveSensor.h>

CapacitiveSensor capSensor = CapacitiveSensor(4,2);


int speakerPin = 7;

int threshold=200;

int numTones = threshold;

int Tones1[]={261,294, 329, 349};

void setup()
{
  Serial.begin(9600);
  pinMode(speakerPin, OUTPUT);
}

void loop()
{
  long sensorValue = capSensor.capacitiveSensor(100);

  if(sensorValue > threshold){
    digitalWrite(speakerPin, Tones1[4]);
  }

else 

noTone(speakerPin);

}


Working Code:

const int ledPin =  9;  
const int ledPin2 = 6; // the number of the LED pin

// Variables will change :
int ledState = LOW;            // ledState used to set the LED

// Generally, you should use "unsigned long" for variables that hold time
// The value will quickly become too large for an int to store
unsigned long previousMillis = 0;        // will store last time LED was updated

// constants won't change :
const long interval = 2000;           // interval at which to blink (milliseconds)

void setup() {
  // set the digital pin as output:
  pinMode(ledPin, OUTPUT);
  pinMode(ledPin2, OUTPUT);

}

void loop() {
  // here is where you'd put code that needs to be running all the time.

  // check to see if it's time to blink the LED; that is, if the
  // difference between the current time and last time you blinked
  // the LED is bigger than the interval at which you want to
  // blink the LED.
  unsigned long currentMillis = millis();

  if (currentMillis - previousMillis >= interval) {
    // save the last time you blinked the LED
    previousMillis = currentMillis;

    // if the LED is off turn it on and vice-versa:
    if (ledState == LOW) {
      ledState = HIGH;
    } else {
      ledState = LOW;
    }

    // set the LED with the ledState of the variable:
    digitalWrite(ledPin, ledState);
        digitalWrite(ledPin2, ledState);

  }
}
